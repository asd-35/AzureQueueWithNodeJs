{"version":3,"file":"queue.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/queue.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/queueMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Queue. */\nexport class Queue {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Queue.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new queue under the given account.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.QueueCreateResponse>\n   */\n  create(options?: Models.QueueCreateOptionalParams): Promise<Models.QueueCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.QueueCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(options?: Models.QueueCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.QueueCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.QueueCreateResponse>;\n  }\n\n  /**\n   * operation permanently deletes the specified queue\n   * @param [options] The optional parameters\n   * @returns Promise<Models.QueueDeleteResponse>\n   */\n  deleteMethod(options?: Models.QueueDeleteMethodOptionalParams): Promise<Models.QueueDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.QueueDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.QueueDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.QueueDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.QueueDeleteResponse>;\n  }\n\n  /**\n   * Retrieves user-defined metadata and queue properties on the specified queue. Metadata is\n   * associated with the queue as name-values pairs.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.QueueGetPropertiesResponse>\n   */\n  getProperties(options?: Models.QueueGetPropertiesOptionalParams): Promise<Models.QueueGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.QueueGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.QueueGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.QueueGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.QueueGetPropertiesResponse>;\n  }\n\n  /**\n   * sets user-defined metadata on the specified queue. Metadata is associated with the queue as\n   * name-value pairs.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.QueueSetMetadataResponse>\n   */\n  setMetadata(options?: Models.QueueSetMetadataOptionalParams): Promise<Models.QueueSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.QueueSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.QueueSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.QueueSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.QueueSetMetadataResponse>;\n  }\n\n  /**\n   * returns details about any stored access policies specified on the queue that may be used with\n   * Shared Access Signatures.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.QueueGetAccessPolicyResponse>\n   */\n  getAccessPolicy(options?: Models.QueueGetAccessPolicyOptionalParams): Promise<Models.QueueGetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccessPolicy(callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccessPolicy(options: Models.QueueGetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  getAccessPolicy(options?: Models.QueueGetAccessPolicyOptionalParams | coreHttp.ServiceCallback<Models.SignedIdentifier[]>, callback?: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): Promise<Models.QueueGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccessPolicyOperationSpec,\n      callback) as Promise<Models.QueueGetAccessPolicyResponse>;\n  }\n\n  /**\n   * sets stored access policies for the queue that may be used with Shared Access Signatures\n   * @param [options] The optional parameters\n   * @returns Promise<Models.QueueSetAccessPolicyResponse>\n   */\n  setAccessPolicy(options?: Models.QueueSetAccessPolicyOptionalParams): Promise<Models.QueueSetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessPolicy(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessPolicy(options: Models.QueueSetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setAccessPolicy(options?: Models.QueueSetAccessPolicyOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.QueueSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessPolicyOperationSpec,\n      callback) as Promise<Models.QueueSetAccessPolicyResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{queueName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.QueueCreateHeaders\n    },\n    204: {\n      headersMapper: Mappers.QueueCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.QueueCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{queueName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    204: {\n      headersMapper: Mappers.QueueDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.QueueDeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{queueName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.QueueGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.QueueGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{queueName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    204: {\n      headersMapper: Mappers.QueueSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.QueueSetMetadataHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{queueName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        xmlElementName: \"SignedIdentifier\",\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      headersMapper: Mappers.QueueGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.QueueGetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{queueName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"queueAcl\"\n    ],\n    mapper: {\n      xmlName: \"SignedIdentifiers\",\n      xmlElementName: \"SignedIdentifier\",\n      serializedName: \"queueAcl\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"SignedIdentifier\"\n          }\n        }\n      }\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    204: {\n      headersMapper: Mappers.QueueSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.QueueSetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n"]}